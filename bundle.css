/* Reset and Basic Setup */
html,body,p,ol,ul,li,dl,dt,dd,blockquote,figure,fieldset,legend,textarea,pre,iframe,hr,h1,h2,h3,h4,h5,h6{margin:0;padding:0}
h1,h2,h3,h4,h5,h6{font-size:100%;font-weight:normal}
ul{list-style:none}
button,input,select,textarea{margin:0;font-family:inherit;font-size:inherit;color:inherit;}
html{box-sizing:border-box;-webkit-tap-highlight-color:transparent;}
*,*:before,*:after{box-sizing:inherit}
img,embed,object,audio,video{height:auto;max-width:100%} /* video added */
iframe{border:0}
table{border-collapse:collapse;border-spacing:0}
td,th{padding:0;text-align:left}

:root {
  /* Material You Expressive - Light Theme Palette (Defaults) */
  --my-primary: #4A80F5; /* Vibrant Blue */
  --my-on-primary: #FFFFFF;
  --my-primary-container: #D8E2FF;
  --my-on-primary-container: #001A7A;

  --my-secondary: #FF8A65; /* Warm Coral */
  --my-on-secondary: #FFFFFF;
  --my-secondary-container: #FFDCCF;
  --my-on-secondary-container: #2D150C; /* Darkened for better contrast */

  --my-tertiary: #26A69A; /* Playful Teal */
  --my-on-tertiary: #FFFFFF;
  --my-tertiary-container: #B2DFDB;
  --my-on-tertiary-container: #00201D; /* Darkened */

  --my-surface: #FDFBFF;
  --my-on-surface: #1B1C1E;
  --my-surface-variant: #E1E2EC;
  --my-on-surface-variant: #44474F;
  
  --my-surface-container-lowest: #FFFFFF;
  --my-surface-container-low: #F7F2FA;
  --my-surface-container: #F3EDF7;
  --my-surface-container-high: #EDE8F4;
  --my-surface-container-highest: #E6E0EC;


  --my-outline: #74777F;
  --my-outline-variant: #C4C6CF;
  
  --my-background: #F8F8FC; /* Slightly off-white, very light */
  --my-on-background: #1B1C1E;

  --my-scrim: rgba(0, 0, 0, 0.6);
  --my-shadow-color: rgba(0, 0, 0, 0.1);
  --my-shadow-umbra-opacity: 0.2;
  --my-shadow-penumbra-opacity: 0.14;
  --my-shadow-ambient-opacity: 0.12;

  --my-radius-small: 8px;
  --my-radius-medium: 12px;
  --my-radius-large: 16px;
  --my-radius-extra-large: 28px;
  --my-radius-full: 999px; /* For pills */

  --my-font-family: 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Helvetica Neue', Arial, sans-serif;
  --my-font-size-body-large: 16px;
  --my-font-size-body-medium: 14px;
  --my-font-size-title-large: 22px;
  --my-font-size-headline-small: 24px;
}

@media (prefers-color-scheme: dark) {
  :root {
    --my-primary: #B0C6FF;
    --my-on-primary: #00258E;
    --my-primary-container: #0038C8;
    --my-on-primary-container: #D8E2FF;

    --my-secondary: #FFB59F;
    --my-on-secondary: #4A2518; /* Darkened */
    --my-secondary-container: #643A2C; /* Darkened */
    --my-on-secondary-container: #FFDCCF;

    --my-tertiary: #80CBC4;
    --my-on-tertiary: #003832;
    --my-tertiary-container: #00504A;
    --my-on-tertiary-container: #B2DFDB;

    --my-surface: #1D1B20; /* Dark Surface */
    --my-on-surface: #E6E1E5;
    --my-surface-variant: #49454F;
    --my-on-surface-variant: #CAC4D0;
    
    --my-surface-container-lowest: #0F0D13;
    --my-surface-container-low: #1D1B20;
    --my-surface-container: #211F26;
    --my-surface-container-high: #2B2930;
    --my-surface-container-highest: #36343B;

    --my-outline: #8F8D93;
    --my-outline-variant: #49454F;

    --my-background: #141218; /* Very Dark Background */
    --my-on-background: #E6E1E5;

    --my-scrim: rgba(0, 0, 0, 0.7);
    --my-shadow-color: rgba(0, 0, 0, 0.25);
  }
}

body {
  font-family: var(--my-font-family);
  font-size: var(--my-font-size-body-large);
  line-height: 1.5;
  color: var(--my-on-background);
  background-color: var(--my-background);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* App Layout & Header */
.app__layout {
  position: absolute; /* Kept from original for full screen video behavior */
  width: 100%;
  height: 100%;
  overflow: hidden;
  background-color: var(--my-background); /* Fallback if video fails */
}

.app__header {
  width: 100%;
  height: 64px; /* Slightly taller for Material feel */
  color: var(--my-on-surface); /* Icons/text on surface if header is surface color */
  background-color: var(--my-surface-container-high); /* Elevated surface */
  display: flex;
  align-items: center;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 100; /* Higher z-index */
  padding: 0 16px;
  box-shadow: 0 1px 2px 0 var(--my-shadow-color);
  transition: background-color 0.3s ease, color 0.3s ease;
}

.app__header-icon {
  width: 40px; /* Touch target size */
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  border-radius: var(--my-radius-full);
  position: absolute; /* Kept original */
  right: 16px; /* Adjusted spacing */
  top: 50%;
  transform: translateY(-50%);
  transition: background-color 0.2s ease;
}
.app__header-icon svg {
  fill: var(--my-on-surface-variant); /* Themed icon color */
}
.app__header-icon:hover {
  background-color: rgba(var(--my-on-surface-rgb, 27,28,30), 0.08); /* Using RGB for opacity */
}
.app__header-icon:active {
  background-color: rgba(var(--my-on-surface-rgb, 27,28,30), 0.12);
  opacity: 1; /* Remove old opacity */
}
:root { /* Define RGB versions for RGBA usage */
  --my-on-surface-rgb: 27,28,30; 
}
@media (prefers-color-scheme: dark) {
  :root { --my-on-surface-rgb: 230,225,229; }
}


.app__header-title { /* Not used in current HTML but good to have */
  margin-left: 16px;
  font-size: var(--my-font-size-title-large);
  font-weight: 500;
  color: var(--my-on-surface);
  user-select: none;
}

.app__layout-content {
  height: 100%; /* inherit changed to 100% */
  padding-top: 64px; /* Account for fixed header */
  overflow-y: auto; /* If content ever overflows */
}

/* Custom Menu Icon (if used elsewhere, e.g. title in header) */
.custom-menu-icon { /* This was for a title-like element, not an icon specifically */
  font-size: var(--my-font-size-headline-small);
  line-height: 1.2; /* Adjust line height */
  color: var(--my-on-primary-container); /* Example: if it's on a primary container bg */
}
.custom-title {
  color: var(--my-on-surface);
}

/* FAB - Floating Action Button (app__select-photos) */
.app__select-photos { /* This is the FAB */
  width: 56px;
  height: 56px;
  border-radius: var(--my-radius-large); /* Squircle shape */
  background-color: var(--my-primary-container);
  color: var(--my-on-primary-container); /* Icon color */
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  position: fixed;
  bottom: 24px; /* Adjusted spacing */
  right: 24px;
  border: none; /* Remove border if any */
  outline: 0;
  box-shadow: 0 4px 8px 0px var(--my-shadow-color), 0 6px 10px 0px var(--my-shadow-color); /* M3 Elevation */
  z-index: 1000;
  transition: background-color 0.2s ease, box-shadow 0.2s ease, transform 0.2s ease;
}
.app__select-photos svg {
  fill: var(--my-on-primary-container); /* Ensure icon color is themed */
}
.app__select-photos:hover {
  background-color: var(--my-primary);
  color: var(--my-on-primary);
  box-shadow: 0 6px 12px 0px var(--my-shadow-color), 0 8px 15px 0px var(--my-shadow-color);
}
.app__select-photos:active {
  background-color: var(--my-primary);
  color: var(--my-on-primary);
  box-shadow: 0 2px 4px -1px var(--my-shadow-color); /* Pressed state */
  transform: scale(0.95);
  opacity: 1; /* Remove old opacity */
}
input[type='file']{display:none} /* Keep this */


/* Custom Button (old .custom-btn, not used in current HTML for FAB anymore) */
.custom-btn{ 
  /* This class was defined but maybe not used prominently. If it is, it should be styled as a Material button */
  position:fixed;right:26px;bottom:26px; /* Original positioning */
  background:var(--my-secondary); color: var(--my-on-secondary);
  border-radius:var(--my-radius-large); border:0;
  width:auto; min-width: 56px; height:56px; padding: 0 24px;
  outline:0;
  box-shadow: 0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12);
  z-index:9999;
  font-weight: 500;
  text-transform: uppercase;
  transition: background-color 0.2s ease, box-shadow 0.2s ease;
}
.custom-btn:active{box-shadow:none}
.custom-fab-icon{ /* Inside custom-btn, if used */
  color:var(--my-on-secondary);font-size:24px; /* Adjusted */
  user-select:none;
}


/* Message Centering (old .custom-msg) */
.custom-msg{
  text-align:center;width:90%;max-width: 400px; /* Max width */
  height:auto; /* Auto height */
  overflow:auto;margin:auto;position:absolute;top:50%;left:50%;
  transform: translate(-50%, -50%); /* Centering */
  font-size: var(--my-font-size-body-large);
  color: var(--my-on-surface-variant);
  padding: 20px;
}

/* Video Styling */
video {
  transform: translateX(-50%) translateY(-50%); /* Original centering */
  top: 50%;
  left: 50%;
  min-width: 100%;
  min-height: 100%;
  width: auto;
  height: auto;
  position: absolute;
  background-color: var(--my-background); /* Background for video area */
  z-index: -1; /* Ensure it's behind UI elements */
}

/* List Styling (if used) */
#list li {
  list-style-type: none;
  text-decoration: none; /* Remove underline */
  color: var(--my-primary); /* Link-like color */
  padding: 8px 0;
  cursor: pointer;
}
#list li:hover {
  text-decoration: underline;
}

.custom-copy-btn{opacity:0} /* Keep hidden if not used or style if used */
.hide{display:none} /* Utility class */

/* Scanner Animation */
@keyframes scanner-expressive {
  0% {
    bottom: 90%;
    opacity: 0.7;
    height: 3px;
    box-shadow: 0 0 10px 2px var(--my-tertiary), 0 0 20px 5px var(--my-tertiary-container);
  }
  50% {
    bottom: 10%;
    opacity: 1;
    height: 4px; /* Thicker mid-scan */
    box-shadow: 0 0 15px 3px var(--my-tertiary), 0 0 30px 7px var(--my-tertiary-container);
  }
  100% {
    bottom: 90%;
    opacity: 0.7;
    height: 3px;
    box-shadow: 0 0 10px 2px var(--my-tertiary), 0 0 20px 5px var(--my-tertiary-container);
  }
}

.custom-scanner { /* The animated line */
  width: calc(100% - 20px); /* Slightly inset */
  height: 3px;
  background: var(--my-tertiary);
  position: absolute;
  transition: all 200ms linear; /* Original transition */
  animation: scanner-expressive 2.5s infinite ease-in-out; /* New animation */
  display: none; /* Initial state */
  left: 10px; /* Centered */
  right: 10px;
  margin: auto;
  border-radius: var(--my-radius-full);
  z-index: 3; /* Above scanner image, below text */
}

/* Camera View (placeholder for actual camera, if used) */
#camera{opacity:0} /* Original, seems unused visually */

.no-support{
  font-size: var(--my-font-size-title-large);
  text-align:center;
  color: var(--my-on-surface-variant);
  padding: 40px 20px;
}

/* Snackbar */
.app__snackbar {
  position: fixed;
  bottom: 24px; /* More spacing from bottom */
  left: 50%;
  transform: translateX(-50%); /* Centered */
  pointer-events: none;
  z-index: 9999;
  width: calc(100% - 32px); /* Responsive width */
  max-width: 500px; /* Max width */
  display: flex; /* Allow multiple snackbars to stack */
  flex-direction: column-reverse; /* Newest on top */
  align-items: center;
}

.app__snackbar-msg {
  width: 100%;
  min-height: 48px;
  background-color: var(--my-surface-container-highest); /* Darker surface */
  color: var(--my-on-surface);
  border-radius: var(--my-radius-medium); /* Increased radius */
  box-shadow: 0 3px 5px -1px rgba(0,0,0,var(--my-shadow-umbra-opacity)),
              0 6px 10px 0 rgba(0,0,0,var(--my-shadow-penumbra-opacity)),
              0 1px 18px 0 rgba(0,0,0,var(--my-shadow-ambient-opacity));
  display: flex;
  align-items: center;
  justify-content: space-between; /* Original */
  font-size: var(--my-font-size-body-medium);
  font-weight: 400; /* Normal weight */
  padding: 14px 16px; /* Adjusted padding */
  word-break: break-word; /* break-all is too aggressive */
  transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1), transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  text-transform: none; /* initial is fine */
  margin-bottom: 8px; /* Spacing between snackbars */
  pointer-events: auto; /* Individual snackbars are interactive */
  opacity: 1;
  transform: translateY(0);
}

.app__snackbar--hide .app__snackbar-msg { /* For hiding animation */
  opacity: 0;
  transform: translateY(20px);
}

/* Dialogs */
.app__dialog, .app__infodialog {
  z-index: 1050; /* Above scrim */
  background-color: var(--my-surface-container-high);
  width: calc(100% - 48px); /* Responsive width */
  max-width: 320px; /* Max width for phone dialogs */
  min-height: 180px; /* Adjusted min-height */
  height: auto; /* Auto height based on content */
  border-radius: var(--my-radius-extra-large); /* Expressive radius */
  display: flex; /* Kept flex for content alignment */
  flex-direction: column;
  position: fixed; /* fixed for centering */
  left: 50%;
  right: auto;
  bottom: auto;
  top: 50%;
  transform: translate(-50%, -50%);
  margin: 0; /* Reset margin */
  box-shadow: 0 8px 10px 1px rgba(0,0,0,var(--my-shadow-umbra-opacity)),
              0 3px 14px 2px rgba(0,0,0,var(--my-shadow-penumbra-opacity)),
              0 5px 5px -3px rgba(0,0,0,var(--my-shadow-ambient-opacity));
  overflow: hidden; /* Clip content to rounded corners */
  transition: opacity 0.2s ease, transform 0.2s ease;
}

.app__infodialog {
  max-width: 480px; /* Wider for info */
  min-height: 240px; /* Adjusted */
}

.app__dialog-content, .app__infodialog-content {
  width: 100%;
  padding: 24px; /* Generous padding */
  flex-grow: 1;
  overflow-y: auto;
}

.app__infodialog-subcontent {
  margin-top: 16px;
  font-size: var(--my-font-size-body-medium);
  line-height: 1.6;
}
.app__infodialog-subcontent a {
  color: var(--my-primary);
  text-decoration: none;
  font-weight: 500;
}
.app__infodialog-subcontent a:hover {
  text-decoration: underline;
}
.app__infodialog-subcontent p:not(:first-child) {
  margin-top: 12px;
}

.app__dialog-content h1, .app__infodialog h1 {
  margin-top: 0; /* Remove top margin for h1 */
  margin-bottom: 16px;
  font-weight: 500; /* Semi-bold */
  font-size: var(--my-font-size-headline-small);
  color: var(--my-on-surface);
  line-height: 1.2;
}

.app__dialog input[type="text"] {
  width: 100%;
  height: 56px; /* Material input height */
  border: 1px solid var(--my-outline);
  border-radius: var(--my-radius-small);
  outline: 0;
  font-size: var(--my-font-size-body-large);
  color: var(--my-on-surface);
  font-weight: 400;
  padding: 0 16px;
  background-color: var(--my-surface-container-lowest); /* Slightly different bg for input */
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
}
.app__dialog input[type="text"]:focus {
  border-color: var(--my-primary);
  box-shadow: 0 0 0 1px var(--my-primary);
}

.app__dialog-actions, .app__infodialog-actions {
  display: flex; /* Use flex for button alignment */
  justify-content: flex-end; /* Align buttons to the right */
  padding: 8px 24px 16px; /* Padding around actions */
  width: 100%;
  position: relative; /* No longer absolute */
  bottom: auto; right: auto; /* Reset */
}

.app__infodialog-open, .app__infodialog-close, .app__dialog-open, .app__dialog-close {
  border: none;
  min-width: 64px; /* Min width for text buttons */
  height: 40px;
  padding: 0 12px; /* Horizontal padding for text buttons */
  font-size: var(--my-font-size-body-medium);
  background: transparent;
  color: var(--my-primary); /* Text button color */
  font-weight: 500;
  outline: 0;
  cursor: pointer;
  border-radius: var(--my-radius-full); /* Pill shape for text buttons */
  text-transform: uppercase;
  letter-spacing: 0.05em;
  transition: background-color 0.2s ease;
  margin-left: 8px; /* Spacing between buttons */
}
.app__infodialog-open:first-child, .app__infodialog-close:first-child, 
.app__dialog-open:first-child, .app__dialog-close:first-child {
  margin-left: 0;
}

.app__dialog-open { /* This was display:none, style as a primary action button */
  background-color: var(--my-primary);
  color: var(--my-on-primary);
}
.app__dialog-open:hover {
  background-color: var(--my-primary-container); /* Lighter shade on hover */
  color: var(--my-on-primary-container);
}
.app__infodialog-open:hover, .app__infodialog-close:hover, 
.app__dialog-close:hover { /* Hover for text buttons */
  background-color: rgba(var(--my-primary-rgb, 74,128,245), 0.1); /* Use RGB for opacity */
}
:root { /* Define RGB versions for RGBA usage */
  --my-primary-rgb: 74,128,245; 
}
@media (prefers-color-scheme: dark) {
  :root { --my-primary-rgb: 176,198,255; }
}


.app__infodialog-open:active, .app__infodialog-close:active, 
.app__dialog-open:active, .app__dialog-close:active {
  opacity: 0.8; /* Simpler active state */
}

.app__infodialog--hide, .app__dialog--hide {
  opacity: 0;
  transform: translate(-50%, -50%) scale(0.95);
  pointer-events: none; /* Hide from interaction */
  display: flex; /* Keep flex for transition, actual hiding by opacity/pointer-events */
}


/* Overlay for Dialogs (Scrim) */
.app__dialog-overlay, .app__infodialog-overlay {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  top: 0;
  background: var(--my-scrim);
  z-index: 1040; /* Below dialog, above content */
  opacity: 1;
  transition: opacity 0.3s ease;
}
.app__dialog--hide ~ .app__dialog-overlay, /* Hide scrim when dialog is hidden */
.app__infodialog--hide ~ .app__infodialog-overlay {
  opacity: 0;
  pointer-events: none;
}


/* Scanner Visual Overlay - Attempting "Expressive" on existing HTML */
.app__overlay { /* This is the 310x310 box */
  position: fixed; /* Kept from original */
  top: 0;bottom: 0;right: 0;left: 0; /* Centering */
  width: clamp(200px, 70vmin, 310px); /* Responsive size */
  height: clamp(200px, 70vmin, 310px);
  margin: auto;
  border: none; /* Remove original border */
  z-index: 5; /* Above video, below other UI */
  display: flex;
  align-items: center;
  justify-content: center;
  /* The app__overlay-frame, left, right are problematic for full rounded corners.
     Instead, we style the main app__overlay and position the SVG corners and scanner line within it. */
}

.app__overlay-frame {
  /* This div is inside app__overlay. We can make it the visual scanner window. */
  width: 100%;
  height: 100%;
  border-radius: var(--my-radius-extra-large); /* Expressive rounded corners */
  border: 2px solid var(--my-outline-variant); /* A subtle border */
  position: relative; /* For positioning scanner line and SVG corners */
  overflow: hidden; /* Clip scanner line if it goes outside */
  box-shadow: 0 0 0 9999px rgba(0,0,0,0.3); /* Cutout effect */
}

.app__overlay-left, .app__overlay-right {
  display: none; /* Hide these as they conflict with modern cutout */
}

.app__scanner-img { /* The SVG corners */
  z-index: 2; /* Above frame border, below scanner line */
  position: absolute;
  top: 0; left: 0; /* Align with parent app__overlay-frame */
  width: 100%; height: 100%;
  display: block; /* Was none */
  pointer-events: none; /* Don't intercept clicks */
}
.app__scanner-img svg {
  width: 100%; height: 100%;
}
.app__scanner-img svg path {
  fill: var(--my-tertiary); /* Themed color for corners */
  opacity: 0.8;
  /* Consider adding a stroke for definition */
  /* stroke: var(--my-surface); stroke-width: 2px; */
}


.app__help-text, .app__select-photos-text { /* Assuming .app__select-photos might have text near it */
  color: var(--my-on-background); /* Themed text color */
  position: absolute;
  bottom: 100px; /* Adjusted from -70px to be visible */
  font-size: var(--my-font-size-body-medium);
  left:0; right:0; /* Centered */
  text-align:center;
  user-select:none;
  z-index: 6; /* Above overlay cutout */
  padding: 0 20px;
}
.app__help-text {
  display: block; /* Was none, make it visible by default or control with JS */
}

/* Icons (generic, if used separately) */
.camera__icon, .focus__icon {
  position: relative; /* Original */
  left: 10px; /* Original */
  display: none; /* Original */
  fill: var(--my-on-surface-variant); /* Themed */
}

/* Frame for image display (if #frame is used) */
#frame {
  width: auto;
  height: auto;
  border-radius: var(--my-radius-medium);
  box-shadow: 0 2px 8px var(--my-shadow-color);
  margin: 20px auto;
  display: block;
}

/* App Version */
.app__version {
  position: absolute;
  bottom: 8px; /* Consistent spacing */
  left: 50%;
  transform: translateX(-50%);
  font-size: 12px; /* Smaller text */
  color: var(--my-on-surface-variant); /* Less prominent */
  margin-top: 0; /* Reset */
  display: inline-block; /* Original */
  padding: 4px 8px;
  background-color: rgba(var(--my-surface-rgb, 253,251,255), 0.5);
  border-radius: var(--my-radius-small);
}
@media (prefers-color-scheme: dark) {
  :root { --my-surface-rgb: 29,27,32; }
}


/* Media Queries Adjustments */
@media screen and (max-width: 480px) {
  .app__infodialog {
    width: calc(100% - 32px); /* Slightly more padding on small screens */
    border-radius: var(--my-radius-large); /* Slightly smaller radius */
  }
  .app__infodialog-content {
    padding: 20px; /* Adjusted padding */
  }
  .app__dialog, .app__infodialog {
    max-width: calc(100% - 32px); /* Ensure dialogs don't exceed screen width */
  }
  .app__header {
    height: 56px;
  }
  .app__layout-content {
    padding-top: 56px;
  }
  .app__help-text {
    bottom: 80px;
  }
}

/* Ensure custom scanner (line) is displayed when its parent is visible and scanning */
/* This would typically be controlled by JS by adding a class to .app__overlay-frame */
.app__overlay-frame.is-scanning .custom-scanner {
  display: block;
}
.app__overlay-frame.is-scanning ~ .app__help-text { /* Example: hide help text when scanning */
  display: none;
}

/* Ensure the scanner SVG corners are visible */
.app__overlay-frame .app__scanner-img {
  display: block;
}
